name: Android CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - ".github/**"
      - "!.github/workflows/**"
      - "*.md"

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build App
    steps:
      - name: Checkout Git Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: Set up JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'temurin'
          cache: gradle

      - name: Create Sign File
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        run: |
          touch signing.properties
          echo storePassword=${{ secrets.KEY_STORE_PASSWORD }} >> signing.properties
          echo keyAlias=${{ secrets.ALIAS }} >> signing.properties
          echo keyPassword='${{ secrets.KEY_STORE_PASSWORD }}' >> signing.properties
          echo storeFile=key.jks >> signing.properties
          echo ${{ secrets.SIGNING_KEY }} | base64 --decode > key.jks

      - name: Build with Gradle
        shell: bash
        run: ./gradlew assembleRelease

      - name: Find APKs
        run: |
          echo "APK_FILE_RELEASE=$(find app/build/outputs/apk/release -name '*.apk')" >> $GITHUB_ENV

      - name: Show APKs SHA256
        if: success()
        run: |
          echo "### Build Success" >> $GITHUB_STEP_SUMMARY
          echo "|Artifact|SHA256|" >> $GITHUB_STEP_SUMMARY
          echo "|:--------:|:----------|" >> $GITHUB_STEP_SUMMARY
          release=($(sha256sum '${{ env.APK_FILE_RELEASE }}'))
          echo "|Release|$release" >> $GITHUB_STEP_SUMMARY

      - name: Upload Release APK
        uses: actions/upload-artifact@v3
        with:
          name: Kernel Flasher
          path: ${{ env.APK_FILE_RELEASE }}
